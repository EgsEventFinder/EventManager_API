# Create Events API deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: events-api
  namespace: egs-eventfinder
  labels:
    app: events-api
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: events-api
  template:
    metadata:
      labels:
        app: events-api
    spec:
      containers:
      - name: events-api
        image: registry.deti:5000/egs-eventfinder/events-api:v10
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 7000

---

apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: egs-eventfinder
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: mongodb
  ports:
  - name: mongodb
    port: 27017
    targetPort: 27017

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: egs-eventfinder
spec:
  serviceName: mongodb
  selector:
    matchLabels:
      app: mongodb
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: mongodb
          image: bitnami/mongodb:latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 27017
          volumeMounts:
            - name: mongodb-data
              mountPath: /bitnami/mongodb
      
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
        namespace: egs-eventfinder
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: longhorn
        resources:
          requests:
            storage: 1Gi


---
apiVersion: v1
kind: Service
metadata:
  name: app-events
  namespace: egs-eventfinder
spec:
  ports:
  - port: 7001
    protocol: TCP
    targetPort: 7000
  selector:
    app: events-api
  type: NodePort

# Traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: events-api
  namespace: egs-eventfinder
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: events-api.deti
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app-events
            port: 
              number: 7001



# ----------------------------------------------------------------

# # MongoDB 
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mongodb
#   namespace: egs-eventfinder
#   labels:
#     app: mongodb
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mongodb
#   template:
#     metadata:
#       labels:
#         app: mongodb
#     spec:
#       containers:
#         - name: mongodb
#           image: mongo
#           ports:
#             - containerPort: 27017
#           volumeMounts:
#             - name: mongodb-data
#               mountPath: /data/db
#       volumes:
#         - name: mongodb-data
#           persistentVolumeClaim:
#             claimName: mongodb-pvc

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mongodb-pvc
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
#   storageClassName: longhorn
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: mongodb
#   namespace: egs-eventfinder
# spec:
#   ports:
#   - name: mongodb
#     port: 27017
#     targetPort: 27017
#   selector:
#     app: mongodb